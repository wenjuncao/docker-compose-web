
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        rewrite ^(.*)$ https://$host$1 permanent;

            location / {
                root   html;
                index  index.html index.html;
            }

            error_page   500 502 503 504  /50x.html;

            location = /50x.html {
                root   html;
        }
    }

    server {
        listen 443 ssl;
        server_name localhost;  # localhost修改为您证书绑定的域名。

        ssl_certificate localhost.crt;   #将domain name.pem替换成您证书的文件名。
        ssl_certificate_key localhost.key ;   #将domain name.key替换成您证书的密钥文件名。

        ssl_session_timeout 5m;

        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。

        ssl_prefer_server_ciphers on;

        location / {
            root   /web/dist/;
            index  index.html index.htm;
        }

        location /docker{
            proxy_pass http://127.0.0.1:7395/docker; # 将地址代理到api上
        }
    }
}
